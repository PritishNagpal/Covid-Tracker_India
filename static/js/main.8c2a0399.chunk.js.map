{"version":3,"sources":["logo.svg","components/Button.js","components/StatesScreens/States.js","components/Card.js","components/Chart.js","components/RecoveredChart.js","components/DeathChart.js","components/Table.js","components/StatesScreens/Home.js","Routes/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","margin","spacing","textDecoration","display","textAlign","TextButtons","classes","className","to","Button","table","width","StyledChart","Mah","props","useState","title","data","setData","rowData","setRowData","useEffect","fetch","then","res","json","Values","map","state","districtData","values","id","push","confirmed","districts","item","cases","console","log","labels","datasets","label","borderColor","hoverBorderColor","fill","backgroundColor","rows","district","val","style","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","key","options","responsive","maintainAspectRatio","SimpleCard","colors","minWidth","maxHeight","color","border","boxShadow","fontSize","fontWeight","pos","marginBottom","Card","CardContent","Typography","gutterBottom","variant","plus","cc","CardActions","Totalcaseschart","isLaptop","useMediaQuery","query","Style","result","recData","Date","slice","parseInt","Confirmed","Object","keys","RecoveredChart","Recovered","Radium","Deaths","styles","SimpleTable","states","setStates","stateArray","deaths","recovered","href","CasesStyle","height","marginTop","Home","justifyContent","src","logo","alt","padding","marginRight","flexWrap","cChanges","active","dChanges","rChanges","Routers","exact","path","States","App","basename","process","Routes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8c2a0399.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dc62b3fa.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      textDecoration: 'none',\r\n      display: 'block',\r\n      textAlign: 'center'\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function TextButtons() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Link to=\"/\"><Button>Back To Home</Button></Link>\r\n    </div>\r\n  );\r\n}","import React,{ useState, useEffect} from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '../Button';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: '50%',\r\n    margin: '0 auto'\r\n  },\r\n});\r\n\r\nconst StyledChart = {\r\n    'width': '80%',\r\n    'height': '300px',\r\n    'margin': '0 auto'\r\n}\r\n\r\nfunction createData(district, cases) {\r\n  return { district, cases };\r\n}\r\n\r\nconst Mah = (props) => {\r\n\r\n    const [title,setTitle] = useState(props.title);\r\n    const [data,setData] = useState({});\r\n    const [rowData,setRowData] = useState([]);\r\n    \r\nconst DataByDistrict = () => {\r\n    fetch('https://api.covidindiatracker.com/state_data.json')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        const Values = [];\r\n         data.map(data => {\r\n            if(data.state === title){\r\n            data.districtData.map(values => {\r\n                if(values.id === 'Other-States'){\r\n                    values.id = 'Others'\r\n                }\r\n                Values.push({\r\n                    id: values.id,\r\n                    confirmed: values.confirmed\r\n                })\r\n            })\r\n        }\r\n         })\r\n         setRowData(Values);\r\n         const districts = Values.map(item => item.id)\r\n         const cases = Values.map(item => item.confirmed)\r\n         \r\n\r\n         console.log()\r\n         setData({\r\n            labels: districts,\r\n            datasets: [\r\n                {\r\n                    label: `Cases in ${title}`,\r\n                    data: cases,\r\n                    borderColor: 'red',\r\n                    hoverBorderColor: 'green',\r\n                    fill: false,\r\n                    backgroundColor: 'red'\r\n                } \r\n            ]\r\n            \r\n        })\r\n        \r\n    })\r\n};\r\nuseEffect(() => {\r\n    DataByDistrict();\r\n},[])\r\n\r\nconst rows = [];\r\n\r\n  rowData.map(data => {\r\n      const val = createData(data.id,data.confirmed)\r\n      rows.push(val);\r\n      console.log(val)\r\n  })\r\nconst classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign: 'center'}}>{title}</h1>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>District</TableCell>\r\n                        <TableCell align=\"center\">Confirmed Cases</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {rows.map((row) => (\r\n                        <TableRow key={row.district}>\r\n                        <TableCell  >\r\n                            {row.district}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{row.cases}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            \r\n            <div style={StyledChart}>\r\n            <Bar \r\n            data={data} \r\n           \r\n            options={{\r\n                responsive:true,\r\n                maintainAspectRatio: false\r\n            }} />\r\n            </div>\r\n            <Button />\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Mah;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst  SimpleCard = (props) =>  {\r\n\r\n\r\n  let colors;\r\n  switch(props.title){\r\n    case 'Recovered': \r\n      colors = 'green'\r\n      break;\r\n    case 'Confirmed Cases':\r\n      colors = 'red'\r\n      break;\r\n    case 'Deaths':\r\n      colors = '#d80000'\r\n      break;\r\n    default:\r\n      colors = 'black'\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 200,\r\n      maxHeight: 1000,\r\n      margin: '10px auto',\r\n      color: colors,\r\n      //borderRadius: '100px',\r\n      border: '1px solid black',\r\n      boxShadow: 'inset 0px 14px 50px -11px rgba(220,220,220,1)'\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n      fontWeight: 'bold',\r\n      color: 'black'\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n      \r\n\r\n    },\r\n  });\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          {props.title}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.val}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n            {props.plus}{props.cc}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        \r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SimpleCard;","import React,{ useState, useEffect } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst Totalcaseschart = () => {\r\n    const [data,setData] = useState({});\r\n\r\n    const isLaptop = useMediaQuery( {query: '(min-width: 1024px)'} )\r\n    const isTablet = useMediaQuery( {query: '(min-width: 768px)'} )\r\n    let Style = {\r\n        margin: '0 auto'\r\n    };\r\n    if(isTablet){\r\n        Style = {\r\n            ...Style,\r\n            'width': '70%'\r\n        }\r\n    }\r\n    else if(isLaptop){\r\n        Style = {\r\n            ...Style,\r\n            'width': '50%',\r\n        }\r\n    }\r\n\r\n    \r\n    const chart = () => {\r\n        fetch('https://api.covid19api.com/country/india')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            const recData ={};\r\n            result.map(values => {\r\n                const val = values.Date.slice(0,5)+values.Date.slice(5,7);\r\n                recData[val] = parseInt(values.Confirmed); \r\n            })\r\n            setData({\r\n                labels: Object.keys(recData),\r\n                datasets: [\r\n                    {\r\n                        label: 'Confirmed Cases',\r\n                        data: Object.values(recData),\r\n                        fill: false,\r\n                        borderColor: 'red'\r\n                    }, \r\n                ]\r\n                \r\n            })\r\n            \r\n        })\r\n    };\r\n    \r\n    useEffect(() => {\r\n        chart();\r\n        \r\n    },[])\r\n\r\n      return(\r\n        <div style={Style} >\r\n            <Line \r\n            data={data}\r\n            options={{\r\n                responsive: true,\r\n                maintainAspectRatio: true\r\n            }}/>\r\n        </div>\r\n      );\r\n\r\n}\r\n\r\n\r\nexport default Totalcaseschart;\r\n\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\n\r\nconst RecoveredChart = () => {\r\n\r\n    const isLaptop = useMediaQuery( {query: '(min-width: 1024px)'} )\r\n    const isTablet = useMediaQuery( {query: '(min-width: 768px)'} )\r\n    let Style = {\r\n        margin: '0 auto'\r\n    };\r\n    \r\n    if(isTablet){\r\n        Style = {\r\n            ...Style,\r\n            'width': '70%'  \r\n        }\r\n    }\r\n    else if(isLaptop){\r\n        Style = {\r\n            ...Style,\r\n            'width': '50%'\r\n        }\r\n    }\r\n\r\n    const [data,setData] = useState({});\r\n\r\n    const chart = () => {\r\n        fetch('https://api.covid19api.com/country/india')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            const recData ={};\r\n            result.map(values => {\r\n                const val = values.Date.slice(0,5)+values.Date.slice(5,7);\r\n                recData[val] = parseInt(values.Recovered);\r\n               \r\n            })\r\n            setData({\r\n                labels: Object.keys(recData),\r\n                datasets: [\r\n                    {\r\n                        label: 'Recovered',\r\n                        data: Object.values(recData),\r\n                        fill: false,\r\n                        borderColor: 'green'\r\n                    }, \r\n                ]\r\n                \r\n            })\r\n            \r\n        })\r\n    };\r\n    \r\n    useEffect(() => {\r\n        chart();\r\n        \r\n    },[])\r\n\r\n    return (\r\n        <div style={Style}>\r\n            <Line data={data}\r\n            options= {{\r\n                responsive: true,\r\n                maintainAspectRatio: true\r\n\r\n            }}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecoveredChart;","import React,{ useState, useEffect } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Radium from 'radium';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst DeathChart = () => {\r\n    const isLaptop = useMediaQuery( {query: '(min-width: 1024px)'} )\r\n    const isTablet = useMediaQuery( {query: '(min-width: 768px)'} )\r\n    let Style = {\r\n        margin: '0 auto'\r\n    };\r\n    if(isTablet){\r\n        Style = {\r\n            ...Style,\r\n            'width': '70%'\r\n        }\r\n    }\r\n    else if(isLaptop){\r\n        Style = {\r\n            ...Style,\r\n            'width': '50%',\r\n        }\r\n    }\r\n    \r\n    const [data,setData] = useState({});\r\n    const chart = () => {\r\n        fetch('https://api.covid19api.com/country/india')\r\n        .then(res => res.json())\r\n        .then(result => {\r\n            const recData ={};\r\n            result.map(values => {\r\n                const val = values.Date.slice(0,5)+values.Date.slice(5,7);\r\n                recData[val] = parseInt(values.Deaths);\r\n               \r\n            })\r\n            setData({\r\n                labels: Object.keys(recData),\r\n                datasets: [\r\n                    {\r\n                        label: 'Deaths',\r\n                        data: Object.values(recData),\r\n                        fill: false,\r\n                        borderColor: '#d80000'\r\n                    }, \r\n                ]\r\n                \r\n            })\r\n            \r\n        })\r\n    };\r\n    \r\n    useEffect(() => {\r\n        chart();\r\n        \r\n    },[])\r\n      return(\r\n        <div style={Style}>\r\n            <Line \r\n            data={data}   \r\n            options={{\r\n                responsive:true,\r\n                maintainAspectRatio: true\r\n            }}/>\r\n        </div>\r\n      );\r\n\r\n}\r\n\r\n\r\nexport default Radium(DeathChart);\r\n","import React,{ useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    width: '50%',\r\n    margin: '0 auto'\r\n  },\r\n});\r\n\r\nconst styles = {\r\n    'textDecoration': 'none',\r\n     'color': 'blue'\r\n}\r\n\r\nfunction createData(state, confirmed, deaths, recovered) {\r\n  return { state, confirmed, deaths, recovered };\r\n}\r\n\r\n\r\nexport default function SimpleTable() {\r\n  const classes = useStyles();\r\n\r\n  const [states,setStates] = useState([{}]);\r\n  \r\n  const stateArray = [];\r\n\r\nconst stateData = () => {\r\n\r\n  fetch('https://api.covidindiatracker.com/state_data.json')\r\n  .then(res => res.json())\r\n  .then(result => {\r\n      result.map(data => {\r\n          stateArray.push({\r\n              state: data.state,\r\n              confirmed: data.confirmed,\r\n              deaths: data.deaths,\r\n              recovered: data.recovered\r\n          })\r\n      })\r\n      setStates(stateArray)\r\n  })\r\n}\r\n\r\n  useEffect(() => {\r\n      stateData();\r\n  },[])\r\n\r\n  \r\n  const rows = [];\r\n    states.map(data => {\r\n        const val =  createData(data.state,data.confirmed,data.deaths,data.recovered)\r\n        rows.push(val)\r\n    })\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell  align=\"left\">State</TableCell>\r\n            <TableCell align=\"center\">Confirmed Cases</TableCell>\r\n            <TableCell  align=\"center\">Deaths</TableCell>\r\n            <TableCell  align=\"center\">Recovered</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.state+row.confirmed}>\r\n              <TableCell  align=\"left\">\r\n                      <a style={styles} href={`/Covid-Tracker_India/#/${row.state}`}>\r\n                        {row.state}\r\n                      </a>\r\n              </TableCell>\r\n              <TableCell align=\"center\"> {row.confirmed} </TableCell>\r\n              <TableCell align=\"center\"> {row.deaths} </TableCell>\r\n              <TableCell align=\"center\"> {row.recovered} </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport '../../App.css';\r\nimport SimpleCard from '../Card';\r\nimport TotalCasesChart from '../Chart';\r\nimport RecoveredChart from '../RecoveredChart';\r\nimport DeathChart from '../DeathChart';\r\nimport Table from '../Table';\r\nimport logo from '../../logo.svg';\r\n\r\n\r\nconst CasesStyle = {\r\n    height:'90%',\r\n    width:'90vw',\r\n    margin: '0 auto',\r\n    marginTop: '100px'\r\n  }\r\n\r\nconst Home = () => {\r\n\r\n    const[data,setData] = useState([]);\r\n    const cases = () => {\r\n        fetch('https://api.covidindiatracker.com/total.json')\r\n        .then((res) => res.json())\r\n        .then((result) => {\r\n          setData(result)\r\n        })\r\n      }\r\n        useEffect(() => {\r\n          cases();\r\n        },[])\r\n        \r\n        return (\r\n          <div>\r\n            <div style={{display: 'flex',justifyContent:'center'}}>\r\n            <img src={logo} alt=\"logo\"  style={{width: '50%',padding: '50px'}} />\r\n            </div>\r\n            <div className=\"App\" style={{display: 'flex',marginRight: '0',flexWrap:'wrap'}}>\r\n                <SimpleCard val={data.confirmed} cc={data.cChanges} plus='+' title='Confirmed Cases'/>\r\n                <SimpleCard val={data.active}  title='Active Cases'/>\r\n                <SimpleCard val={data.deaths} cc={data.dChanges}  plus='+' title='Deaths'/>\r\n                <SimpleCard val={data.recovered} cc={data.rChanges}  plus='+' title='Recovered'/>\r\n            </div>\r\n          <div style={CasesStyle}>\r\n            <TotalCasesChart />\r\n            <RecoveredChart />\r\n            <DeathChart/>   \r\n          </div>\r\n            <Table/>\r\n          </div>\r\n        );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport States from '../components/StatesScreens/States';\r\nimport Home from '../components/StatesScreens/Home';\r\nimport Notfound from '../components/StatesScreens/PageNotFound';\r\n\r\nconst Routers = () => {\r\n\r\n    return(\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/Covid-Tracker_India/#/Maharashtra\">\r\n        <States title='Maharashtra'/>\r\n      </Route>\r\n      <Route path=\"/Covid-Tracker_India/Tamil Nadu\">\r\n        <States title='Tamil Nadu'/>\r\n      </Route>\r\n      <Route path=\"/Andhra Pradesh\">\r\n        <States title='Andhra Pradesh'/>\r\n      </Route>\r\n      <Route path=\"/Karnataka\">\r\n        <States title='Karnataka'/>\r\n      </Route>\r\n      <Route path=\"/Delhi\">\r\n        <States title='Delhi'/>\r\n      </Route>\r\n      <Route path=\"/Uttar Pradesh\">\r\n        <States title='Uttar Pradesh'/>\r\n      </Route>\r\n      <Route path=\"/West Bengal\">\r\n        <States title='West Bengal'/>\r\n      </Route>\r\n      <Route path=\"/Bihar\">\r\n        <States title='Bihar'/>\r\n      </Route>\r\n      <Route path=\"/Telangana\">\r\n        <States title='Telangana'/>\r\n      </Route>\r\n      <Route path=\"/Gujarat\">\r\n        <States title='Gujarat'/>\r\n      </Route>\r\n      <Route path=\"/Assam\">\r\n        <States title='Assam'/>\r\n      </Route>\r\n      <Route path=\"/Rajasthan\">\r\n        <States title='Rajasthan'/>\r\n      </Route>\r\n      <Route path=\"/Odisha\">\r\n        <States title='Odisha'/>\r\n      </Route>\r\n      <Route path=\"/Haryana\">\r\n        <States title='Haryana'/>\r\n      </Route>\r\n      <Route path=\"/Madhya Pradesh\">\r\n        <States title='Madhya Pradesh'/>\r\n      </Route>\r\n      <Route path=\"/Kerala\">\r\n        <States title='Kerala'/>\r\n      </Route>\r\n      <Route path=\"/Jammu and Kashmir\">\r\n        <States title='Jammu and Kashmir'/>\r\n      </Route>\r\n      <Route path=\"/Punjab\">\r\n        <States title='Punjab'/>\r\n      </Route>\r\n      <Route path=\"/Jharkhand\">\r\n        <States title='Jharkhand'/>\r\n      </Route>\r\n      <Route path=\"/Chhattisgarh\">\r\n        <States title='Chhattisgarh'/>\r\n      </Route>\r\n      <Route path=\"/Uttarakhand\">\r\n        <States title='Uttarakhand'/>\r\n      </Route>\r\n      <Route path=\"/Goa\">\r\n        <States title='Goa'/>\r\n      </Route>\r\n      <Route path=\"/Tripura\">\r\n        <States title='Tripura'/>\r\n      </Route>\r\n      <Route path=\"/Puducherry\">\r\n        <States title='Puducherry'/>\r\n      </Route>\r\n      <Route path=\"/Manipur\">\r\n        <States title='Manipur'/>\r\n      </Route>\r\n      <Route path=\"/Himachal Pradesh\">\r\n        <States title='Himachal Pradesh'/>\r\n      </Route>\r\n      <Route path=\"/Nagaland\">\r\n        <States title='Nagaland'/>\r\n      </Route>\r\n      <Route path=\"/Arunachal Pradesh\">\r\n        <States title='Arunachal Pradesh'/>\r\n      </Route>\r\n      <Route path=\"/Ladakh\">\r\n        <States title='Ladakh'/>\r\n      </Route>\r\n      <Route path=\"/Andaman and Nicobar Islands\">\r\n        <States title='Andaman and Nicobar Islands'/>\r\n      </Route>\r\n      <Route path=\"/Chandigarh\">\r\n        <States title='Chandigarh'/>\r\n      </Route>\r\n      <Route path=\"/Meghalaya\">\r\n        <States title='Meghalaya'/>\r\n      </Route>\r\n      <Route path=\"/Sikkim\">\r\n        <States title='Sikkim'/>\r\n      </Route>\r\n      <Route path=\"/Daman and Diu\">\r\n        <States title='Daman and Diu'/>\r\n      </Route>\r\n      <Route path=\"/Dadra and Nagar Haveli\">\r\n        <States title='Dadra and Nagar Haveli'/>\r\n      </Route>\r\n      <Route path=\"/Mizoram\">\r\n        <States title='Mizoram'/>\r\n      </Route>\r\n    </Switch>\r\n    )\r\n  }\r\n\r\n\r\n  export default Routers;","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport States from './components/StatesScreens/States';\nimport Home from './components/StatesScreens/Home';\nimport Routes from './Routes/Routes';\n\n\nfunction App() {\n\n  return(\n    <Router basename={process.env.PUBLIC_URL} >\n      <Routes />\n    </Router>\n  )\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}